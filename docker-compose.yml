version: '3.8'

services:
  # Optional Ollama service for AI-enhanced extraction
  ollama:
    image: ollama/ollama:latest
    container_name: ocr_ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
    profiles: ["ai", "complete"]

  # Main OCR Pipeline (Continuous Mode)
  ocr_pipeline:
    build:
      context: .
      dockerfile: Dockerfile.unified
    container_name: ocr_pipeline
    env_file: .env
    environment:
      - OCR_INCOMING=/app/incoming
      - OCR_PROCESSED=/app/processed
      - OCR_LOG_LEVEL=INFO
      - OLLAMA_HOST=http://ollama:11434
    volumes:
      - "${HOST_INCOMING_DIR:-./OCR_INCOMING}:/app/incoming"
      - "${HOST_PROCESSED_DIR:-./OCR_PROCESSED}:/app/processed"
      - "${HOST_LOG_DIR:-./logs}:/app/logs"
    restart: unless-stopped
    depends_on:
      ollama:
        condition: service_healthy
        required: false
    profiles: ["continuous"]
    command: ["python3", "/app/unified_ocr_pipeline.py"]

  # Cron-based Pipeline (Recommended for production)
  ocr_cron:
    build:
      context: .
      dockerfile: Dockerfile.unified
    container_name: ocr_cron
    env_file: .env
    environment:
      - OCR_INCOMING=/app/incoming
      - OCR_PROCESSED=/app/processed
      - OCR_LOG_LEVEL=INFO
      - OLLAMA_HOST=http://ollama:11434
    volumes:
      - "${HOST_INCOMING_DIR:-./OCR_INCOMING}:/app/incoming"
      - "${HOST_PROCESSED_DIR:-./OCR_PROCESSED}:/app/processed"
      - "${HOST_LOG_DIR:-./logs}:/app/logs"
      - "./crontab:/etc/cron.d/ocr_pipeline"
    restart: unless-stopped
    depends_on:
      ollama:
        condition: service_healthy
        required: false
    profiles: ["cron", "production"]
    command: ["cron", "-f"]

  # One-time processing mode
  ocr_oneshot:
    build:
      context: .
      dockerfile: Dockerfile.unified
    container_name: ocr_oneshot
    env_file: .env
    environment:
      - OCR_INCOMING=/app/incoming
      - OCR_PROCESSED=/app/processed
      - OCR_LOG_LEVEL=DEBUG
      - OLLAMA_HOST=http://ollama:11434
    volumes:
      - "${HOST_INCOMING_DIR:-./OCR_INCOMING}:/app/incoming"
      - "${HOST_PROCESSED_DIR:-./OCR_PROCESSED}:/app/processed"
      - "${HOST_LOG_DIR:-./logs}:/app/logs"
    depends_on:
      ollama:
        condition: service_healthy
        required: false
    profiles: ["oneshot", "test"]
    command: ["python3", "/app/unified_ocr_pipeline.py"]

volumes:
  ollama_data:

networks:
  default:
    name: ocr_network
    driver: bridge